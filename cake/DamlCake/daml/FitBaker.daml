

daml 1.2

module FitBaker where

data CakeType = Chocolate | Cheese| Banana | Eccles | UpsideDown deriving (Eq, Show)

template CakeOffer

  with
    baker: Party
    cakeType: CakeType
    customer: Party
  
  where
    signatory baker

    controller customer can

      AcceptOffer: ContractId Cake
        do
          create Cake with baker, cakeType = Chocolate, owner = customer

template CakeRequest

  with
    baker: Party
    cakeType: CakeType
    customer: Party
  
  where
    signatory customer

    controller baker can

      AcceptRequest: ContractId Cake
        do
          create Cake with baker, cakeType = Chocolate, owner = customer

template Cake

  with
    cakeType: CakeType
    owner: Party
    baker: Party  
  
  where
    signatory owner

    controller owner can

      Eat : ()
        do 
          return ()

offerTest : Scenario ()
offerTest = do
  
  baker <- getParty "Fit Baker Bakery"
  customer <- getParty "Ella"

  -- Offer
  offerCid <- submit baker do create CakeOffer with baker, cakeType = Chocolate, customer

  -- Accept
  cakeCid <- submit customer do exercise offerCid AcceptOffer

  -- Eat
  submit customer do exercise cakeCid Eat

  return ()

requestTest : Scenario ()
requestTest = do
  
  baker <- getParty "Fit Baker Bakery"
  customer <- getParty "Christopher"

  -- Request
  offerCid <- submit customer do create CakeRequest with baker, cakeType = Chocolate, customer

  -- Accept
  cakeCid <- submit baker do exercise offerCid AcceptRequest

  -- Eat
  submit customer do exercise cakeCid Eat

  return ()